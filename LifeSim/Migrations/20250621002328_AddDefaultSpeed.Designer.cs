// <auto-generated />
using System;
using LifeSim.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LifeSim.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250621002328_AddDefaultSpeed")]
    partial class AddDefaultSpeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("LifeSim.Data.Models.AnimalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Age")
                        .HasColumnType("REAL");

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<float>("DefaultSpeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(16f);

                    b.Property<float>("Health")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(20f);

                    b.Property<float>("Lifespan")
                        .HasColumnType("REAL");

                    b.Property<float>("MaxHealth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(20f);

                    b.Property<float>("PredationInclination")
                        .HasColumnType("REAL");

                    b.Property<float>("ReproductionCooldown")
                        .HasColumnType("REAL");

                    b.Property<float>("Saturation")
                        .HasColumnType("REAL");

                    b.Property<float>("Size")
                        .HasColumnType("REAL");

                    b.Property<float>("Speed")
                        .HasColumnType("REAL");

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("LifeSim.Data.Models.Bet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpiresAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InitialCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserClientId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserClientId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("LifeSim.Data.Models.FoodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Age")
                        .HasColumnType("REAL");

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<float>("Lifespan")
                        .HasColumnType("REAL");

                    b.Property<float>("Size")
                        .HasColumnType("REAL");

                    b.Property<float>("X")
                        .HasColumnType("REAL");

                    b.Property<float>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("LifeSim.Data.Models.User", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LifeSim.Data.Models.Bet", b =>
                {
                    b.HasOne("LifeSim.Data.Models.User", null)
                        .WithMany("Bets")
                        .HasForeignKey("UserClientId");
                });

            modelBuilder.Entity("LifeSim.Data.Models.User", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
